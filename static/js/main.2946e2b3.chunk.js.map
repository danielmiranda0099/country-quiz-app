{"version":3,"sources":["redux/actions/cardCountriesActions.js","redux/reducers/cardCountriesReducers.js","redux/reducers/rootReducers.js","redux/store.js","pages/404.js","helpers/getRandomContries.js","components/card-quiz/ButtonsAnswers.js","components/card-quiz/CardQuiz.js","pages/CountryQuizPage.js","components/card-quiz/CardQuizScore.js","pages/CountryQuizScore.js","components/Earth.js","components/Footer.js","components/Header.js","pages/HomePage.js","pages/AuthLoginPage.js","pages/AuthRegisterPage.js","routers/AuthRouter.js","routers/AppRouter.js","App.js","index.js"],"names":["CARD_RANDOM_COUNTRIES","CARD_ANSWER","CARD_IS_ANSWER_SELECT","CARD_IS_ANSWER_CORRECT","CARD_SCORE","CARD_SCORE_RESET","CARD_RES_INCORRECT","cardRandomCountriesAction","countries","type","payload","cardAnswerAction","answer","cardIsAnswerSelectAction","isSelect","cardIsAnswerCorrectAction","isCorrect","initialState","cardCountries","resIncorrect","isAnswerCorrect","isAnswerSelect","score","rootReducers","combineReducers","cardCountriesReducers","state","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","Page404","getRandomContries","json","randomCountry","parseInt","Math","random","filter","el","country","length","capital","push","ButtonsAnswers","dispatch","useDispatch","history","useHistory","letters","useSelector","handleClickAnswer","e","res","target","dataset","index","String","setTimeout","map","className","onClick","CardQuiz","useEffect","data","src","process","alt","CountryQuizPage","CardQuizScore","handleClickTry","patch","style","fontSize","color","CountryQuizScore","Earth","backgroundImage","Footer","margin","href","Header","HomePage","width","height","flex","to","AuthLoginPage","AuthRegisterPage","AuthRouter","exact","path","component","AppRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2946e2b3.chunk.js","sourcesContent":["\r\nexport const CARD_RANDOM_COUNTRIES = 'CARD_RANDOM_COUNTRIES';\r\nexport const CARD_ANSWER = 'CARD_ANSWER';\r\nexport const CARD_IS_ANSWER_SELECT = 'CARD_IS_ANSWER_SELECT';\r\nexport const CARD_IS_ANSWER_CORRECT = 'CARD_IS_ANSWER_CORRECT';\r\nexport const CARD_SCORE = 'CARD_SCORE';\r\nexport const CARD_SCORE_RESET = 'CARD_SCORE_RESET';\r\nexport const CARD_RES_INCORRECT = 'CARD_RES_INCORRECT';\r\n\r\n\r\nexport const cardRandomCountriesAction = ( countries ) => {\r\n    return {\r\n        type: CARD_RANDOM_COUNTRIES,\r\n        payload: countries\r\n    }\r\n}\r\n\r\nexport const cardAnswerAction = ( answer ) => {\r\n    return {\r\n        type: CARD_ANSWER,\r\n        payload: answer\r\n    }\r\n}\r\n\r\nexport const cardResIncorrect = ( res ) => {\r\n    return {\r\n        type: CARD_RES_INCORRECT,\r\n        payload: res\r\n    }\r\n}\r\n\r\nexport const cardIsAnswerSelectAction = ( isSelect ) => {\r\n    return {\r\n        type: CARD_IS_ANSWER_SELECT,\r\n        payload: isSelect\r\n    }\r\n}\r\n\r\nexport const cardIsAnswerCorrectAction = ( isCorrect ) => {\r\n    return {\r\n        type: CARD_IS_ANSWER_CORRECT,\r\n        payload: isCorrect\r\n    }\r\n}\r\n\r\nexport const cardScore = ( ) => {\r\n    return {\r\n        type: CARD_SCORE\r\n    }\r\n}\r\n\r\nexport const cardScoreReset = () => {\r\n    return {\r\n        type: CARD_SCORE_RESET\r\n    }\r\n}\r\n\r\n","import { CARD_ANSWER, \r\n        CARD_IS_ANSWER_SELECT, \r\n        CARD_RANDOM_COUNTRIES, \r\n        CARD_IS_ANSWER_CORRECT, \r\n        CARD_SCORE, \r\n        CARD_SCORE_RESET,\r\n        CARD_RES_INCORRECT} from \"../actions/cardCountriesActions\";\r\n\r\nconst initialState = {\r\n    cardCountries: [],\r\n    answer: null,\r\n    resIncorrect: false,\r\n    isAnswerCorrect: null,\r\n    isAnswerSelect: false,\r\n    score: 0\r\n}\r\n\r\nexport const cardCountriesReducers = ( state=initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case CARD_RANDOM_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                cardCountries: action.payload\r\n            }\r\n        \r\n        case CARD_ANSWER:\r\n            return {\r\n                ...state,\r\n                answer: action.payload\r\n            }\r\n        case CARD_RES_INCORRECT:\r\n               return {\r\n                   ...state,\r\n                   resIncorrect: action.payload\r\n               } \r\n        case CARD_IS_ANSWER_SELECT:\r\n            return {\r\n                ...state,\r\n                isAnswerSelect: action.payload\r\n            }\r\n        case CARD_IS_ANSWER_CORRECT:\r\n            return {\r\n                ...state,\r\n                isAnswerCorrect: action.payload\r\n            }\r\n        case CARD_SCORE:\r\n            return {\r\n                ...state,\r\n                score: state.score + 1\r\n            }\r\n        case CARD_SCORE_RESET:\r\n            return {\r\n                ...state,\r\n                score: 0\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { cardCountriesReducers } from './cardCountriesReducers';\r\n\r\nexport const rootReducers = combineReducers({\r\n    cardCountriesReducers\r\n})","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducers } from \"./reducers/rootReducers\";\r\n\r\n\r\nexport const store = createStore( rootReducers, composeWithDevTools(  \r\n    applyMiddleware(thunk)\r\n) );","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n\r\n    return (\r\n        <h2>404</h2>\r\n    )\r\n}","\r\n\r\nexport const getRandomContries = ( json ) => {\r\n    const countries = [];\r\n\r\n    while(countries.length < 4){\r\n        let randomCountry =  parseInt( (Math.random() * (247 - 1 + 1)) + 1 );\r\n\r\n        if( countries?.filter( el => el?.country === json[randomCountry]?.country).length <= 0 && json[randomCountry]?.country.length > 1 && json[randomCountry]?.capital.length > 1  ){\r\n            countries.push(json[randomCountry]);\r\n        }\r\n    }\r\n\r\n    return countries;\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory  } from 'react-router';\r\n\r\nimport { cardIsAnswerCorrectAction, cardIsAnswerSelectAction, cardResIncorrect, cardScore } from '../../redux/actions/cardCountriesActions';\r\n\r\nexport const ButtonsAnswers = ( ) => {\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const letters = ['A', 'B', 'C', 'D'];\r\n\r\n  const { cardCountries, answer, isAnswerSelect, resIncorrect} = useSelector( state => state.cardCountriesReducers);\r\n  \r\n  const handleClickAnswer = (e) => {\r\n    if(!isAnswerSelect){\r\n      if(e.target.dataset.index === String(answer)){\r\n        dispatch( cardIsAnswerCorrectAction(true) );\r\n        dispatch( cardScore() )\r\n      }else{\r\n        dispatch( cardResIncorrect( e.target.dataset.capital ) );\r\n        dispatch( cardIsAnswerCorrectAction(false) );\r\n\r\n        setTimeout(() => {\r\n          history.push('/country-quiz-score');\r\n        }, 2000);\r\n      }\r\n      dispatch( cardIsAnswerSelectAction(true) );\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {\r\n        cardCountries?.length > 0 && cardCountries.map( (el, index) => \r\n                    <div className={`buttons-answers ${!isAnswerSelect && 'is-hover'} `}\r\n                    data-index={index}\r\n                    data-capital={el.capital} \r\n                    key={el.capital}  \r\n                    onClick={ handleClickAnswer }> \r\n                            \r\n                            <h2 className={'answers-letters'}\r\n                            data-index={index}\r\n                            data-capital={el.capital}>\r\n                                {letters[index]}\r\n                            </h2> \r\n\r\n                            <h2 data-index={index}\r\n                            data-capital={el.capital}> {el.capital} </h2>  \r\n\r\n                            <div className={`animation-response  ${ isAnswerSelect &&  index === answer ? 'is-animate answers-correct' : null} ${resIncorrect === el.capital && 'is-animate answers-wrong'}`} ></div>\r\n                    </div>) \r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { getRandomContries } from '../../helpers/getRandomContries';\r\nimport { cardAnswerAction, cardIsAnswerCorrectAction, cardIsAnswerSelectAction, cardRandomCountriesAction} from '../../redux/actions/cardCountriesActions';\r\n\r\nimport { ButtonsAnswers } from './ButtonsAnswers';\r\nimport data from '../../database/dataCountries.json';\r\n\r\nexport const CardQuiz = () => {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    \r\n    const { cardCountries, answer, isAnswerCorrect} = useSelector( state => state.cardCountriesReducers );\r\n\r\n    \r\n    useEffect( () => {\r\n        const countries = getRandomContries( data );\r\n        dispatch( cardRandomCountriesAction( countries ) )\r\n        const answer = parseInt( (Math.random() * (3 - 1 + 1)) + 1 );\r\n        dispatch( cardAnswerAction( answer ) );\r\n    }, []);\r\n\r\n    const handleClickNext = () => {\r\n        const countries = getRandomContries( data );\r\n        dispatch( cardRandomCountriesAction(countries) ); \r\n        const answer = parseInt( (Math.random() * (3 - 1 + 1)) + 1 );\r\n        dispatch( cardAnswerAction( answer ) );\r\n    \r\n        dispatch( cardIsAnswerCorrectAction(null) );\r\n        dispatch( cardIsAnswerSelectAction(false) );\r\n\r\n        history.push('/country-quiz');\r\n    }\r\n\r\n    return(\r\n        <div className=\"container-card\">\r\n\r\n            \r\n\r\n           { \r\n                <div className=\"card animate__animated animate__fast animate__backInDown\">\r\n                    <img className='img-quiz' src={ `${process.env.PUBLIC_URL}/img/undraw_adventure_4hum 1.svg` } alt='imagen'/>\r\n                    <h2 className=\"title-quiz\">La capital de { cardCountries.length > 1 && cardCountries[answer].country } es:</h2>\r\n\r\n                    <ButtonsAnswers />\r\n\r\n                    {\r\n                        isAnswerCorrect && <h2 className='button-next' onClick={ handleClickNext }> NEXT </h2>\r\n                    }\r\n                </div>                               \r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { CardQuiz } from \"../components/card-quiz/CardQuiz\";\r\n\r\nexport const CountryQuizPage = () => {\r\n\r\n    return (\r\n        <CardQuiz  />\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { cardIsAnswerCorrectAction, cardIsAnswerSelectAction, cardScoreReset } from \"../../redux/actions/cardCountriesActions\";\r\n\r\nexport const CardQuizScore = () => {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const { score } = useSelector( state => state.cardCountriesReducers );\r\n\r\n    const handleClickTry = ( patch ) => {\r\n        dispatch( cardIsAnswerCorrectAction(null) )\r\n        dispatch( cardIsAnswerSelectAction(false) );\r\n        dispatch( cardScoreReset() )\r\n\r\n        history.push( patch )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-card\">\r\n            <div className=\"card card-score animate__animated animate__fast animate__backInDown\">\r\n                <img src={ `${process.env.PUBLIC_URL}/img/undraw_winners_ao2o 2.svg` } alt='imagen'/>\r\n                <h2 style={{ fontSize:'35px', color: '#1D355D' }}>Resultado</h2>\r\n                <div className='flex-row score-description'> <h2>Obtuviste</h2> <h2 className='score-main'> { score } </h2>  <h2>respuestas correctas</h2></div>\r\n            \r\n                \r\n                {/*<Link to='/country-quiz'>Try</Link>*/}\r\n                <h2 className='score-button button' onClick={ () => handleClickTry('/country-quiz') }>Try</h2>\r\n                <h2 className='score-button button' onClick={ () => handleClickTry('/') }>Home</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { CardQuizScore } from \"../components/card-quiz/CardQuizScore\";\r\n\r\nexport const CountryQuizScore = () => {\r\n\r\n    return (\r\n        <CardQuizScore />\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Earth = () => {\r\n\r\n    return (\r\n        <div className='earth'>\r\n            <div style={{  backgroundImage: `url(${process.env.PUBLIC_URL}/img/map-svg.png)`}}></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Footer = () => {\r\n\r\n    return (\r\n        <div className='footer' >\r\n            <h2 style={{margin:'0'}}>Made by Daniel Miranda </h2>\r\n            <a className='flex-row enlace' href=\"https://danielmiranda0099.github.io/portfolio/\" target='_black'> <h2> - site web</h2> <i className=\"icon fas fa-globe\"></i>  </a>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Header = () => {\r\n\r\n    return(\r\n        <h2 className='header' style={{margin:'0'}}>Country-Quiz</h2>\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Earth } from \"../components/Earth\";\r\nimport { Footer } from \"../components/Footer\";\r\nimport { Header } from \"../components/Header\";\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    return(\r\n        <div className='flex-column animate__animated animate__fadeIn animate__slo' style={{width:'100%', height: '100vh'}}>\r\n            <Header/>\r\n\r\n            <Earth />\r\n\r\n            <div className='flex-column' style={{width:'100%', height:'100%' ,flex: '1 1 auto'}}>\r\n                <Link  className='button home-button' to='/country-quiz'>start</Link>\r\n            </div>\r\n            \r\n            <Footer />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const AuthLoginPage = () => {\r\n\r\n    return (\r\n        <h2>Login</h2>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const AuthRegisterPage = () => {\r\n\r\n    return (\r\n        <h2>Register</h2>\r\n    )\r\n}","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport { AuthLoginPage } from \"../pages/AuthLoginPage\";\r\nimport { AuthRegisterPage } from \"../pages/AuthRegisterPage\";\r\n\r\nexport const AuthRouter = () => {\r\n\r\n    return(\r\n        <div>\r\n            <Switch>\r\n                <Route  \r\n                    exact\r\n                    path='/auth/login'\r\n                    component={ AuthLoginPage }\r\n                />\r\n\r\n                <Route  \r\n                    exact\r\n                    path='/auth/register'\r\n                    component={ AuthRegisterPage }\r\n                />\r\n\r\n                <Redirect to='/auth/login' />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Page404 } from '../pages/404';\r\nimport { CountryQuizPage } from '../pages/CountryQuizPage';\r\nimport { CountryQuizScore } from '../pages/CountryQuizScore';\r\nimport { HomePage } from '../pages/HomePage';\r\nimport { AuthRouter } from './AuthRouter';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route \r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                    />\r\n\r\n                    <Route \r\n                        path=\"/country-quiz\"\r\n                        component={ CountryQuizPage }\r\n                    />\r\n\r\n                    <Route \r\n                        path=\"/country-quiz-score\"\r\n                        component={ CountryQuizScore }\r\n                    />\r\n\r\n                    <Route\r\n                        exact  \r\n                        path=\"/\"\r\n                    >\r\n                        <HomePage />\r\n                    </Route>\r\n\r\n                    <Route \r\n                        path='*'\r\n                        component={ Page404}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import './styles.css';\nimport './normalize.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { AppRouter } from './routers/AppRouter';\n\nfunction App() {\n  return (\n    <Provider store={ store } > \n      <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}